@page "/auth/login"
@layout AuthLayout
@using PlannerApp.Shared.Models
@inject AuthenticationService authService
@inject NavigationManager navigationManager


<div class="row">
    <div class="col-12">
        <h2>Log In to your Account</h2>
        <EditForm Model="model" OnValidSubmit="LogInUser">
            <RadzenCard>
                <AlertMessage Message="@message" MessageType="@messageType" />

                <ul>
                    @foreach (var item in userInfo)
                    {
                        <li>@item.Key : @item.Value</li>
                    }
                </ul>

                <DataAnnotationsValidator />
                <ValidationSummary />
                <label>Email</label>
                <RadzenTextBox @bind-Value="model.Email"></RadzenTextBox>

                <label>Password</label>
                <RadzenPassword @bind-Value="model.Password"></RadzenPassword>
                <hr />
                <RadzenButton ButtonType="Radzen.ButtonType.Submit"
                              Text="Login"
                              ButtonStyle="Radzen.ButtonStyle.Primary"
                              class="btn-block mr-2"
                              Disabled="isBusy">

                </RadzenButton>
                <RadzenButton Click="GoToRegister" ButtonType="Radzen.ButtonType.Button"
                              Text="Register"
                              ButtonStyle="Radzen.ButtonStyle.Success"
                              class="btn-block mr-2"
                              Disabled="isBusy">

                </RadzenButton>
            </RadzenCard>
        </EditForm>
    </div>
</div>

@code{

    LoginRequest model = new LoginRequest();

    bool isBusy = false;
    string message = string.Empty;

    Models.AlertMessageType messageType = Models.AlertMessageType.Success;

    Dictionary<string, string> userInfo = new Dictionary<string, string>();

    public async Task LogInUser()
    {
        isBusy = true;
        var result = await authService.LogInUserAsync(model);

        if (result.IsSuccess)
        {
            message = "Welcome to PlannerApp.";
            userInfo = result.UserInfo;
            messageType = Models.AlertMessageType.Success;
        }
        else
        {
            message = result.Errors.FirstOrDefault() ?? result.Message;
            messageType = Models.AlertMessageType.Error;
        }
        isBusy = false;
    }
    public void GoToRegister()
    {
        navigationManager.NavigateTo("/auth/register");
    }

}